name: Coverage

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  grcov:
    name: Coverage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
        toolchain:
          - nightly
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Install grcov
        env:
          LINK: https://github.com/mozilla/grcov/releases/download
          GRCOV_VERSION: 0.7.1
        run: |
          curl -L "$LINK/v$GRCOV_VERSION/grcov-linux-x86_64.tar.bz2" |
          tar xj -C $HOME/.cargo/bin

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --no-fail-fast ${{ matrix.cargo_flags }}
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort -Cdebug-assertions=off'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort -Cdebug-assertions=off'

      - name: Generate coverage data
        id: grcov
        uses: actions-rs/grcov@v0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage as artifact
        uses: actions/upload-artifact@v2
        with:
          name: lcov.info
          path: ${{ steps.grcov.outputs.report }}

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1
        with:
          file: ${{ steps.grcov.outputs.report }}
          fail_ci_if_error: true
